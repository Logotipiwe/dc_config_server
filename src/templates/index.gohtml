<h2>THIS IS CONFIG SERVER v1!!</h2>
<div id="service-create-form">
    <form method="post" action="api/create-service">
        <label>
            Create service:
            <input placeholder="Name..." name="name">
        </label>
        <input type="submit" value="Create">
    </form>
</div>
<div id="service-select-form">
    <label>
        Service
        <select id="service-select">
            <option value="NO_FILTER">No filter</option>
            <option value="*">all services</option>
            {{ range .Services }}
                <option value="{{.Id}}">{{.Name}}</option>
            {{end}}
        </select>
    </label>
</div>
<div id="namespace-select-form">
    <label>
        Namespace
        <select id="namespace-select">
            <option value="NO_FILTER">No filter</option>
            <option value="">Default</option>
            {{ range .Namespaces }}
                <option value="{{.Id}}">{{.Name}}</option>
            {{end}}
        </select>
    </label>
</div>
<h2>Properties:</h2>
<form action="api/create-prop" method="post" class="property-creating">
    <div id="prop-create-meta-data">
        <label>
            Service:
            <select name="service">
                <option value="">All</option>
                {{ range .Services }}
                    <option value="{{.Id}}">{{.Name}}</option>
                {{end}}
            </select>
        </label>
        <label>
            Namespace:
            <select name="namespace">
                <option value="">Default</option>
                {{ range .Namespaces }}
                    <option value="{{.Id}}">{{.Name}}</option>
                {{end}}
            </select>
        </label>
    </div>
    <div id="prop-create-data">
        <input value="" name="name" class="prop-name" placeholder="Name...">
        <input value="" name="value" class="prop-value" placeholder="Value...">
        <input type="submit" value="Create">
    </div>
</form>
{{ range .Properties }}
    <div class="property" data-id="{{ .Id }}">
        <div class="service">Service: {{ .ServiceName }}. Namespace: {{ .NamespaceName }}</div>
        <div class="data">
            <form action="api/save-prop" method="post" class="save-prop">
                <input type="hidden" name="id" value="{{.Id}}">
                <input name="name" value="{{.Name}}" placeholder="Name...">
                <input name="value" value="{{.Value}}" placeholder="Value..." class="prop-value">
                <input type="submit" value="Save">
            </form>
            {{if .Active}}
                <form action="api/deactivate-prop" method="post" class="deactivate-prop">
                    <input type="hidden" name="id" value="{{.Id}}">
                    <input type="submit" value="Deactivate">
                </form>
            {{else}}
                <form action="api/activate-prop" method="post" class="activate-prop">
                    <input type="hidden" name="id" value="{{.Id}}">
                    <input type="submit" value="Activate">
                </form>
            {{end}}
            <form action="api/delete-prop" method="post" class="delete-prop">
                <input type="hidden" name="id" value="{{.Id}}">
                <input type="submit" value="Delete">
            </form>
        </div>
    </div>
{{end}}
<style>
    form {
        margin: 0;
    }

    .property {
        flex-direction: column;
        margin: 10px;
        display: flex;
        padding: 10px;
        box-sizing: border-box;
        border: 1px lightgray solid;
        width: 600px;
        align-items: center;
        background-color: #fafafa;
    }

    .property .service {
        justify-content: flex-start;
        width: 100%
    }

    .property .data {
        display: flex;
        width: 100%
    }

    .property .data > * {
        margin: 0 5px;
    }

    .property .prop-value {
        flex-grow: 1;
        display: flex;
    }

    .property-creating {
        margin: 10px;
        display: flex;
        padding: 10px;
        box-sizing: border-box;
        border: 1px lightgray solid;
        width: 600px;
        align-items: center;
        background-color: #fafafa;
        flex-direction: column;
    }

    #prop-create-meta-data {
        display: flex;
        width: 100%;
        justify-content: space-around;
        margin-bottom: 10px;
    }

    select {
        width: 150px;
        padding: 3px 0;
    }

    #prop-create-data {
        display: flex;
        width: 100%;
        justify-content: space-around;
    }

    #prop-create-data input {
        margin: 5px;
    }

    .creating input[type=submit] {
        display: flex;
        height: fit-content;
        padding: 4px 10px;
        background-color: lightgreen;
    }

    .delete-prop input[type=submit] {
        background-color: orangered;
        color: white;
    }

    .deactivate-prop input[type=submit] {
    }

    .activate-prop input[type=submit] {
        background-color: gray;
        color: white;
    }

    .save-prop {
        display: flex;
    }

    .save-prop input[type=submit] {
        background-color: #0090c7;
        color: white;
        margin-left: 10px;
    }

    #service-create-form {
        margin-bottom: 20px;
    }
</style>
<script>
    window.props = JSON.parse("{{ .PropsJson }}")
    let selectedServiceId = "NO_FILTER"
    let selectedNamespaceId = "NO_FILTER"

    const serviceSelect = document.querySelector("#service-select")
    serviceSelect.onchange = e => {
        selectedServiceId = e.target.value
        showProps()
    }
    const namespaceSelect = document.querySelector("#namespace-select")
    namespaceSelect.onchange = e => {
        selectedNamespaceId = e.target.value
        showProps()
    }

    function showProps() {
        const serviceId = selectedServiceId
        const namespaceId = selectedNamespaceId

        let serviceFilterFunc
        if(serviceId === "NO_FILTER") serviceFilterFunc = e=>true
        else if(serviceId === "*") serviceFilterFunc = p=> p.serviceId === ""
        else serviceFilterFunc = p => p.serviceId === serviceId

        let namespaceFilterFunc
        if(namespaceId === "NO_FILTER") namespaceFilterFunc = e=>true
        else if(namespaceId === "") namespaceFilterFunc = p=> p.namespaceId === ""
        else namespaceFilterFunc = p => p.namespaceId === namespaceId

        const propsToShow = window.props
            .filter(serviceFilterFunc)
            .filter(namespaceFilterFunc)

        const propsIdsToShow = new Set()
        propsToShow.forEach(p => {
            propsIdsToShow.add(p.id.toString())
        })

        const propsElems = document.querySelectorAll(".property");
        propsElems.forEach(elem => {
            if (!propsIdsToShow.has(elem.dataset.id)) {
                elem.style.display = "none"
            } else {
                elem.style.display = "flex"
            }
        })
    }
</script>